version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - if [ -z "$STAGE" ]; then echo "STAGE env var is missing"; exit 1; fi
      - if [ -z "$AWS_DEFAULT_REGION" ]; then echo "AWS_DEFAULT_VERSION env var is missing"; exit 1; fi
      - chmod +x ./dragonchain/job_processor/bin/fwatchdog
  pre_build:
    commands:
      - echo Building and running tests
      - docker build . -f cicd/Dockerfile.test -t built
      - docker run -v $(pwd)/docs:/usr/src/core/docs built
      - if [ ! -d "./docs/.build/html" ]; then echo "Docs did not build correctly!"; exit 1; fi
  build:
    commands:
      - export VERSION=$(cat .version)
      - TAG="381978683274.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/dragonchain_core:$STAGE-$VERSION"
      - PUB_TAG_LATEST="dragonchain/dragonchain_core:latest"
      - PUB_TAG_VERSION="dragonchain/dragonchain_core:$VERSION"
      - echo Logging into docker
      - $(aws ecr get-login --no-include-email --region us-west-2)
      - aws secretsmanager get-secret-value --secret-id dockerHubPassword --query SecretString --output text | docker login -u dragonchain --password-stdin
      - echo Building and pushing docker containers
      - docker build . -t $TAG
      - docker tag $TAG $PUB_TAG_LATEST
      - docker tag $TAG $PUB_TAG_VERSION
      - docker push $TAG
      - sh cicd/deploy_docs.sh
      - if [ "$STAGE" = dev ]; then echo Generating Banana Index && jq -c ".message |= \"$(grep -ir banana . | wc -l)\"" cicd/banana-shield.json > shield.json && aws s3 cp shield.json s3://dragonchain-core-docs/banana-shield.json; fi
      - if [ "$STAGE" = prod ]; then docker push $PUB_TAG_LATEST && docker push $PUB_TAG_VERSION; fi
